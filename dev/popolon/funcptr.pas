(*<funcptr.pas>
 * Function pointer implementation for Turbo Pascal 3.
 * Unfortunately this feature doesn't exist in TP3 core language.
 * CopyLeft (c) since 1995 by PopolonY2k.
 *)

(**
  *
  * $Id: funcptr.pas 103 2020-06-17 00:40:53Z popolony2k $
  * $Author: popolony2k $
  * $Date: 2020-06-17 00:40:53 +0000 (Wed, 17 Jun 2020) $
  * $Revision: 103 $
  * $HeadURL: file:///svn/p/oldskooltech/code/msx/trunk/msxdos/pascal/funcptr.pas $
  *)

(*
 * This source file depends on following include files (respect the order):
 * -
 *)

(**
  * This function can be used to call a function with the Prototype below:
  * Procedure ( nParmAddr : Integer );
  * This is a way to implement the pointer-to-function feature missed in
  * the Turbo Pascal 3 core language.
  * @param nProcAddr The procedure address (must to be in format described
  * above);
  * @param nProcParm The integer parameter to pass to Pascal procedure;
  *)
Procedure CallProc( nProcAddr, nProcParm : Integer );
Begin
  (*
   * The ASM routine below is located in the .\ASM\ project folder
   * and was generated by INLASS.
   *)
  Inline(
          $ED/$5B/nProcParm       {          LD DE,(NPROCPARM)  }
          /$21/*+$0008            {          LD HL,ENDF         }
          /$D5                    {          PUSH DE            }
          /$E5                    {          PUSH HL            }
          /$2A/nProcAddr          {          LD HL,(NPROCADDR)  }
          /$E9                    {          JP (HL)            }
                                  { ENDF:    END                } );
End;

(**
  * This function can be used to call a function with the Prototype below:
  * Procedure NoParameterFn;
  * This is a way to implement the pointer-to-function feature missed in
  * the Turbo Pascal 3 core language.
  * @param nProcAddr The procedure address (must to be in format described
  * above);
  *)
Procedure CallProcNoParm( nProcAddr : Integer );
Begin
  (*
   * The ASM routine below is located in the .\ASM\ project folder
   * and was generated by INLASS.
   *)
  InLine(
          $21/*+$0007             {          LD HL,ENDF         }
          /$E5                    {          PUSH HL            }
          /$2A/nProcAddr          {          LD HL,(nProcAddr)  }
          /$E9                    {          JP (HL)            }
                                  { ENDF:    END                } );
End;
