(*<ym2151.pas>
 * Library for YM2151 (SFG-05/SFG-01) soundchip handling.
 * CopyLeft (c) since 1995 by PopolonY2k.
 *)

(**
  *
  * $Id: ym2151.pas 103 2020-06-17 00:40:53Z popolony2k $
  * $Author: popolony2k $
  * $Date: 2020-06-17 00:40:53 +0000 (Wed, 17 Jun 2020) $
  * $Revision: 103 $
  * $HeadURL: file:///svn/p/oldskooltech/code/msx/trunk/msxdos/pascal/ym2151.pas $
  *)

(*
 * This module depends on folowing include files (respect the order):
 * - types.pas;
 * - sndparms.pas;
 *)

Const
       { YM2151 related constants }
       ctYM2151StatusRegister            = $3FF0;
       ctYM2151AddressRegister           = $3FF0;
       ctYM2151DataRegister              = $3FF1;
       ctYM2151RegIdxCounter             = $FF;   { YM2151 Register counter }
       (*ctYM2151Identification            = $80;   { YM2151 string ident. }*)



(**
  * Internal module variables.
  *)
Var
    __nYM2151PrimarySlot,
    __nYM2151SecondarySlot : Byte;


(**
  * Write data to YM2151 sound chip directly using internal variable parameter;
  * @param __nYM2151PrimarySlot The YM2151 primary slot number;
  * @param __nYM2151SecondarySlot The YM2151 secondary slot number;
  * @param __pSndChipArrayParms The array address containing the parameters
  * array like described below:
  * item[0] := YM2151 Address Register;
  * item[1] := YM2151 Data Register;
  *)
Procedure WriteYM2151Direct{( __nYM2151PrimarySlot,
                              __nYM2151SecondarySlot : Byte;
                              __pSndChipArrayParms   : Pointer )};
Begin
  (*
   * The ASM routine below is located in the .\ASM\ project folder
   * and was generated by INLASS.
   * Source code: asm\sndchip\ym2151.asm
   *)
  Inline( $2A/__pSndChipArrayParms   {         LD HL,(__pSndChipArrayParms) }
          /$56                       {         LD D,(HL)                    }
          /$23                       {         INC HL                       }
          /$5E                       {         LD E,(HL)                    }
          /$2A/$FF/$FF               {SAVSLT   LD HL,(SEC_SLOT)             }
          /$0E/$A8                   {         LD C,PPI_SSEL                }
          /$F3                       {         DI                           }
          /$ED/$60                   {         IN H,(C)                     }
          /$3A/__nYM2151SecondarySlot{         LD A,(__nYM2151SecondarySlot)}
          /$4F                       {         LD C,A                       }
          /$3A/__nYM2151PrimarySlot  {         LD A,(__nYM2151PrimarySlot)  }
          /$D3/$A8                   {         OUT (PPI_SSEL),A             }
          /$79                       {         LD A,C                       }
          /$32/$FF/$FF               {         LD (SEC_SLOT),A              }
          /$3E/$1B                   {         LD A,CT_REG                  }
          /$BA                       {         CP D                         }
          /$28/$18                   {         JR Z,MSKCT                   }
          /$3E/$14                   {         LD A,IRQEN_REG               }
          /$BA                       {         CP D                         }
          /$28/$19                   {         JR Z,MSKIRQEN                }
          /$7A                       {WRTREG   LD A,D                       }
          /$32/$F0/$3F               {         LD (YM2151_ADDR_REG),A       }
          /$BE                       {         CP (HL)                      }
          /$7B                       {         LD A,E                       }
          /$32/$F1/$3F               {         LD (YM2151_DATA_REG),A       }
          /$7D                       {RESSLT   LD A,L                       }
          /$2F                       {         CPL                          }
          /$32/$FF/$FF               {         LD (SEC_SLOT),A              }
          /$7C                       {         LD A,H                       }
          /$FB                       {         EI                           }
          /$D3/$A8                   {         OUT (PPI_SSEL),A             }
          /$C9                       {         RET                          }
          /$7B                       {MSKCT    LD A,E                       }
          /$E6/$3F                   {         AND CT_DATA_MSK              }
          /$5F                       {         LD E,A                       }
          /$18/$E7                   {         JR WRTREG                    }
          /$7B                       {MSKIRQEN LD A,E                       }
          /$E6/$F3                   {         AND IRQEN_DATA_MSK           }
          /$5F                       {         LD E,A                       }
          /$18/$E1                   {         JR WRTREG                    }
                                     {         END                          } );
End;

(**
  * Write data to the YM2151 sound chip.
  * @param nPrimarySlot The YM2151 primary slot number;
  * @param nSecondarySlot The YM2151 secondary slot number;
  * @param nYM2151AddrReg The address register index to write data;
  * @param nYM2151DataReg The data register to be written;
  *)
Procedure WriteYM2151( nPrimarySlot,
                       nSecondarySlot,
                       nYM2151AddrReg,
                       nYM2151DataReg : Byte );
Var
         aYM2151ArrayParms : Array[0..1] Of Byte;

Begin
  aYM2151ArrayParms[0] := nYM2151AddrReg;
  aYM2151ArrayParms[1] := nYM2151DataReg;

  __nYM2151PrimarySlot   := nPrimarySlot;
  __nYM2151SecondarySlot := nSecondarySlot;
  __pSndChipArrayParms   := Ptr( Addr( aYM2151ArrayParms[0] ) );

  WriteYM2151Direct{( __nYM2151PrimarySlot,
                      __nYM2151SecondarySlot,
                      __pSndChipArrayParms )};
End;

(**
  * Reset the YM2151 soundchip.
  * @param nPrimarySlot The YM2151 primary slot number;
  * @param nSecondarySlot The YM2151 secondary slot number;
  *)
Procedure ResetYM2151( nPrimarySlot, nSecondarySlot : Byte );
Var
         aYM2151ArrayParms : Array[0..1] Of Byte;
         nYM2151AddrReg    : Byte;

Begin
  aYM2151ArrayParms[1]   := 0;
  __nYM2151PrimarySlot   := nPrimarySlot;
  __nYM2151SecondarySlot := nSecondarySlot;
  __pSndChipArrayParms   := Ptr( Addr( aYM2151ArrayParms[0] ) );

  Inline( $F3 );     { DI }

  For nYM2151AddrReg := 0 To ctYM2151RegIdxCounter Do
  Begin
    aYM2151ArrayParms[0] := nYM2151AddrReg;
    WriteYM2151Direct{( __nYM2151PrimarySlot,
                        __nYM2151SecondarySlot,
                        __pSndChipArrayParms )};

    Delay( ctSndchipResetDelay );
  End;

  Inline( $FB );     { EI }
End;
