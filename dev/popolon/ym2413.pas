(*<ym2413.pas>
 * Library for the YM2413 soundchip handling.
 * CopyLeft (c) since 1995 by PopolonY2k.
 *)

(**
  *
  * $Id: ym2413.pas 103 2020-06-17 00:40:53Z popolony2k $
  * $Author: popolony2k $
  * $Date: 2020-06-17 00:40:53 +0000 (Wed, 17 Jun 2020) $
  * $Revision: 103 $
  * $HeadURL: file:///svn/p/oldskooltech/code/msx/trunk/msxdos/pascal/ym2413.pas $
  *)

(*
 * This module depends on folowing include files (respect the order):
 * - types.pas;
 * - sndchips.pas;
 *)

Const
       { YM2413 related constants }
       ctPortYM2413Index          : Byte = $7C;   { YM2413 index write port }
       ctPortYM2413Data           : Byte = $7D;   { YM2413 data I/O }
       ctYM2413RegIdxCount        : Byte = $26;   { YM2413 registers count }
       (*ctFMIdentification      : Integer = $401C; { OPLL string ident. addr. }*)


(**
  * Write data to YM2413 sound chip using internal variable parameter;
  * @param __pSndChipArrayParms The AY2413 array address containing the
  * parameters like described below:
  * item[0] := YM2413 Index Register;
  * item[1] := YM2413 Data Register;
  *)
Procedure WriteYM2413Direct{( __pSndChipArrayParms : Pointer )};
Begin
  (*
   * The ASM routine below is located in the .\ASM\ project folder
   * and was generated by INLASS.
   * Source code: asm\sndchip\ym2413.asm
   *)
  Inline(
          $2A/__pSndChipArrayParms { LD HL,(__pSndChipArrayParm)  }
          /$0E/$7C                 { LD C,YM2413INDEX             }
          /$ED/$A3                 { OUTI                         }
          /$DD/$E5                 { PUSH IX                      }
          /$DD/$E1                 { POP IX                       }
          /$0C                     { INC C                        }
          /$ED/$A3                 { OUTI                         } );
End;

(**
  * Write data to YM2413 sound chip. This is a wrapper function to the
  * @see WriteYM2413Direct procedure.
  * @param nIndex The register index to write data;
  * @param nData The data to be written;
  *)
Procedure WriteYM2413( nIndex, nData : Byte );
Var
         aYM2413ArrayParms : Array[0..1] Of Byte;

Begin
  aYM2413ArrayParms[0] := nIndex;
  aYM2413ArrayParms[1] := nData;
  __pSndChipArrayParms := Ptr( Addr( aYM2413ArrayParms ) );

  WriteYM2413Direct{( __pSndChipArrayParms )};
End;

(**
  * Reset the YM2413 sound chip.
  *)
Procedure ResetYM2413;
Var
         aYM2413ArrayParms : Array[0..1] Of Byte;
         nIndex            : Byte;

Begin
  aYM2413ArrayParms[0] := nIndex;
  aYM2413ArrayParms[1] := 0;
  __pSndChipArrayParms := Ptr( Addr( aYM2413ArrayParms ) );

  For nIndex := 0 To ctYM2413RegIdxCount Do
  Begin
    aYM2413ArrayParms[0] := nIndex;

    WriteYM2413Direct{( __pSndChipArrayParms )};
    Delay( ctSndChipResetDelay );
  End;
End;
